Index: app/src/main/java/com/example/lifelinealert/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.lifelinealert\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material.icons.filled.ShoppingCart\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.NavigationBar\r\nimport androidx.compose.material3.NavigationBarItem\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            MainPage()\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun MainPage() {\r\n    val navController = rememberNavController()\r\n\r\n    Scaffold(\r\n        bottomBar = { BottomNavigationBar(navController) }\r\n    ) { innerPadding ->\r\n        NavHostContainer(navController, Modifier.padding(innerPadding))\r\n    }\r\n\r\n}\r\n\r\nsealed class Page(\r\n    val route: String,\r\n    val title: Int,\r\n    val icon: androidx.compose.ui.graphics.vector.ImageVector\r\n) {\r\n    object Map : Page(\"map\", R.string.page_map_title, Icons.Default.LocationOn)\r\n    object Profile : Page(\"profile\", R.string.page_profile_title, Icons.Default.Person)\r\n    object Point : Page(\"point\", R.string.page_point_title, Icons.Default.ShoppingCart)\r\n}\r\n\r\n//@Preview(showBackground = true)\r\n@Composable\r\nfun BottomNavigationBar(navController: NavHostController) {\r\n    val pages = listOf(\r\n        Page.Map,\r\n        Page.Profile,\r\n        Page.Point\r\n    )\r\n    NavigationBar {\r\n        val currentRoute = getCurrentRoute(navController = navController)\r\n        pages.forEach { page ->\r\n            NavigationBarItem(\r\n                onClick = { navController.navigate(page.route) },\r\n                selected = (currentRoute == page.route),\r\n                label = { Text(text = stringResource(id = page.title)) },\r\n                icon = {\r\n                    Icon(\r\n                        imageVector = page.icon,\r\n                        contentDescription = stringResource(id = page.title)\r\n                    )\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun NavHostContainer(navController: NavHostController, modifier: Modifier = Modifier) {\r\n    NavHost(navController = navController, startDestination = Page.Map.route) {\r\n        composable(Page.Map.route) { MapPage() }\r\n        composable(Page.Profile.route) { ProfilePage() }\r\n        composable(Page.Point.route) { PointPage() }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun getCurrentRoute(navController: NavHostController): String? {\r\n    val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n    return navBackStackEntry?.destination?.route\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun MapPage() {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize(),\r\n        horizontalAlignment = Alignment.CenterHorizontally,\r\n        verticalArrangement = Arrangement.Center\r\n    ) {\r\n        Text(text = \"Map\", fontSize = 24.sp)\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun ProfilePage() {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize(),\r\n        horizontalAlignment = Alignment.CenterHorizontally,\r\n        verticalArrangement = Arrangement.Center\r\n    ) {\r\n        Text(text = \"Profile\", fontSize = 24.sp)\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun PointPage() {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize(),\r\n        horizontalAlignment = Alignment.CenterHorizontally,\r\n        verticalArrangement = Arrangement.Center\r\n    ) {\r\n        Text(text = \"Point Page\", fontSize = 24.sp)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/lifelinealert/MainActivity.kt b/app/src/main/java/com/example/lifelinealert/MainActivity.kt
--- a/app/src/main/java/com/example/lifelinealert/MainActivity.kt	(revision c0cbdc9371813f394b3a3c824bc33f0778d61c2a)
+++ b/app/src/main/java/com/example/lifelinealert/MainActivity.kt	(date 1738902983449)
@@ -50,7 +50,7 @@
     ) { innerPadding ->
         NavHostContainer(navController, Modifier.padding(innerPadding))
     }
-
+ 
 }
 
 sealed class Page(
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision c0cbdc9371813f394b3a3c824bc33f0778d61c2a)
+++ b/.idea/gradle.xml	(date 1738902983458)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1738902983455)
+++ b/.idea/vcs.xml	(date 1738902983455)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
